{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","index.js"],"names":["Square","_ref","value","onClick","style","concat","react_default","a","createElement","className","Board","squares","map","square","i","components_Square","key","Game","_useState","useState","Array","fill","_useState2","Object","slicedToArray","history","setHistory","_useState3","_useState4","stepNumber","setStepNumber","_useState5","_useState6","xIsNext","setXisNext","winner","lines","length","_lines$i","b","c","calculateWinner","xO","Fragment","components_Board","historyPoint","slice","current","toConsumableArray","_step","move","destination","step","ReactDom","render","components_Game","document","getElementById"],"mappings":"+KAEA,IAUeA,EAVA,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,QACjBC,EAAQF,EAAK,WAAAG,OAAcH,GAAd,UAEnB,OACEI,EAAAC,EAAAC,cAAA,UAAQC,UAAWL,EAAOD,QAASA,GAChCD,ICIQQ,EARD,SAAAT,GAAA,IAAGU,EAAHV,EAAGU,QAASR,EAAZF,EAAYE,QAAZ,OACZG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZE,EAAQC,IAAI,SAACC,EAAQC,GAAT,OACXR,EAAAC,EAAAC,cAACO,EAAD,CAAQC,IAAKF,EAAGZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,UCgD7CG,EAlDF,WAAM,IAAAC,EACaC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACVO,EADUH,EAAA,GACDI,EADCJ,EAAA,GAAAK,EAEmBR,mBAAS,GAF5BS,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEVE,EAFUD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGaZ,oBAAS,GAHtBa,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGVE,EAHUD,EAAA,GAGDE,EAHCF,EAAA,GAIXG,ECRD,SAAyBxB,GAW5B,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAtB,EAAI,EAAGA,EAAIsB,EAAMC,OAAQvB,IAAK,KAAAwB,EAAAf,OAAAC,EAAA,EAAAD,CACnBa,EAAMtB,GADa,GAC9BP,EAD8B+B,EAAA,GAC3BC,EAD2BD,EAAA,GACxBE,EADwBF,EAAA,GAErC,GAAI3B,EAAQJ,IAAMI,EAAQJ,KAAOI,EAAQ4B,IAAM5B,EAAQJ,KAAOI,EAAQ6B,GACpE,OAAO7B,EAAQJ,GAGnB,OAAO,KDTMkC,CAAgBhB,EAAQI,IACjCa,EAAKT,EAAU,IAAM,IA8B3B,OACE3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACErC,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAACoC,EAAD,CAAOjC,QAASc,EAAQI,GAAa1B,QA/BrB,SAACW,GACnB,IAAM+B,EAAepB,EAAQqB,MAAM,EAAGjB,EAAa,GAC7CkB,EAAUF,EAAahB,GACvBlB,EAAOY,OAAAyB,EAAA,EAAAzB,CAAOwB,GAEhBZ,GAAUxB,EAAQG,KAEtBH,EAAQG,GAAK4B,EACbhB,EAAU,GAAArB,OAAAkB,OAAAyB,EAAA,EAAAzB,CAAKsB,GAAL,CAAmBlC,KAC7BmB,EAAce,EAAaR,QAC3BH,GAAYD,OAsBV3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBAfNiB,EAAQb,IAAI,SAACqC,EAAOC,GAClB,IAAMC,EAAcD,EAAI,eAAA7C,OAAkB6C,GAAS,UACnD,OACE5C,EAAAC,EAAAC,cAAA,MAAIQ,IAAKkC,GACP5C,EAAAC,EAAAC,cAAA,UAAQL,QAAS,kBATvB2B,EADcsB,EAUsBF,QARpChB,EAAWkB,EAAO,IAAM,GAFX,IAACA,IAU8BD,OAcxC7C,EAAAC,EAAAC,cAAA,UAAK2B,EAAS,WAAaA,EAAS,gBAAkBO,ME3C9DW,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.f535c13a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => {\r\n  const style = value ? `squares ${value}` : `squares`;\r\n\r\n  return (\r\n    <button className={style} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n  <div className=\"board\">\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { calculateWinner } from \"../helper\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(history[stepNumber]);\r\n  const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n  const handleClick = (i) => {\r\n    const historyPoint = history.slice(0, stepNumber + 1);\r\n    const current = historyPoint[stepNumber];\r\n    const squares = [...current];\r\n    // return if won or occupied\r\n    if (winner || squares[i]) return;\r\n    // select square\r\n    squares[i] = xO;\r\n    setHistory([...historyPoint, squares]);\r\n    setStepNumber(historyPoint.length);\r\n    setXisNext(!xIsNext);\r\n  };\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXisNext(step % 2 === 0);\r\n  };\r\n\r\n  const renderMoves = () =>\r\n    history.map((_step, move) => {\r\n      const destination = move ? `Go to move #${move}` : \"Restart\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{destination}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <h1>React Tic Tac Toe Game </h1>\r\n      <Board squares={history[stepNumber]} onClick={handleClick} />\r\n      <div className=\"info-wrapper\">\r\n        <div>\r\n          <h3>History</h3>\r\n          {renderMoves()}\r\n        </div>\r\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Game from \"./components/Game\";\r\n\r\nReactDom.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}